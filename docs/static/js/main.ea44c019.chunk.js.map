{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","stopPropagation","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAkBvC,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAMC,kBACND,EAAME,iBAEFL,EAAWM,OAAOC,OAAS,IAC3BT,GAAe,SAAAU,GAAU,OAAKR,GAAL,mBAAoBQ,OAC7CP,EAAc,OAMd,2BACIQ,KAAK,OACLC,MAAQV,EACRW,SAnBc,SAACR,GACvBF,EAAeE,EAAMS,OAAOF,Y,uBCRvBG,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAHW,kBAKZA,EAAKC,KAAK,SAAAC,GACb,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,iBAAiBX,SATtB,2CAAH,sDCEPY,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOT,EAAW,EAAXA,IACtC,OACI,yBAAKa,UAAU,0CACX,yBACIC,IAAMd,EACNe,IAAMN,IAEV,2BAAKA,KCLJO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EACdf,mBAAS,CAC/BsB,KAAM,GACNY,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAcxC,OARAC,qBAAW,WACPvB,EAASC,GACJuB,MAAK,SAAAX,GAAM,OAAIS,EAAS,CACrBd,KAAMK,EACNO,SAAS,SAElB,CAACnB,IAEGoB,EDX2BI,CAAcxB,GAAlCY,EAFuB,EAE7BL,KAAcY,EAFe,EAEfA,QAEtB,OACI,oCACI,4BAAMnB,GACJmB,GAAW,uBAAGJ,UAAU,oCAAb,cACb,yBAAKA,UAAU,aACTH,EAAOJ,KAAK,SAACC,GAAD,OACV,kBAAC,EAAD,eACIgB,IAAKhB,EAAIC,IACJD,UEadiB,EAzBM,WAAM,MAGazC,mBAAS,CAAC,cAHvB,mBAGhBS,EAHgB,KAGJV,EAHI,KAKvB,OACI,kBAAC,WAAD,KACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEQU,EAAWc,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACIyB,IAAKzB,EACLA,SAAUA,U,MCftC2B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ea44c019.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from \"prop-types\";\n\nconst AddCategory = ( {setCategories} ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (event) => {\n        setInputValue( event.target.value );\n    };\n\n    const handleSubmit = (event) => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n            setCategories( categories => [inputValue, ...categories] );\n            setInputValue('');\n        }\n    };\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}\n\nexport default AddCategory;\n\n\n","export const getGifs = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=CelHQtmu8lWJxCo0Folwnl1ROo5UWyge`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    return data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url,\n        };\n    });\n};","import React from 'react'\n\nexport const GifGridItem = ( { id, title, url } ) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img \n                src={ url } \n                alt={ title }\n            />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React, { } from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3>{ category }</h3>\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\n            <div className=\"card-grid\">\n                { images.map( (img) => (\n                    <GifGridItem \n                        key={img.id} \n                        { ...img }\n                    />\n                )) }\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect( () => {\n        getGifs( category )\n            .then(images => setState({\n                data: images,\n                loading: false,\n            }));\n    }, [category]);\n\n    return state;\n}","import React, { Fragment, useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    // const categories = ['One punch', 'Samurai X', 'Dragon Ball'];\n    const [categories, setCategories] = useState(['One punch']);\n\n    return (\n        <Fragment>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr />\n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid \n                            key={category}\n                            category={category} \n                        />\n                    ))\n                }\n            </ol>\n        </Fragment>\n    )\n};\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GitExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}